#+TITLE: java-web
#+DATE: 2018-04-11
#+SETUPFILE: ~/blog/setupfile.org
#+JEKYLL_LAYOUT: post
#+JEKYLL_CATEGORIES: javaWeb 
#+JEKYLL_TAGS: java
#+JEKYLL_PUBLISHED: true

* JavaEE 三层结构 
1. web层 视图层 struct2框架
2. service层 业务逻辑层 spring框架
3. dao层 hibernate框架 对数据库进行crud操作（增删改查）
** MVC分层思想
* hibernate框架
1. 对jdbc进行封装
2. 开源轻量级框架
3. 应用在javaEE的dao层
** ORM思想
即对象关系映射
1. 让实体类（javabean的别名）和数据库进行一一对应：实体类和数据库表对应；实体类属性
   和表里字段对应
2. 不需要直接操作数据库表，而操作表对应实体类对象
** 搭建hibernate环境
1. 导入hibernate框架jar包，以及日志输出和数据库驱动jar包
2. 创建实体类（实体类必须包含一个唯一属性）
3. 配置实体类和数据库表一一对应关系（映射）
4. 创建hibernate核心配置文件
* spring框架 
1. 开源轻量级框架
2. 一站式框架
** 核心部分
*** IOC 控制反转
两种方式：配置文件方式和注解方式

*底层原理使用技术*
1. xml配置文件
2. dom4j解析xml
3. 工厂设计模式
4. 反射
*** AOP 面向切面编程
** 一站式框架
spring针对javaee三层结构分别提供不同解决方案
- web层 springMVC
- service层 spring的IOC
- dao层 spring的jdbcTemplate
** bean 实例化三种方式实现
1. 使用类的无参构造创建
2. 使用静态工厂创建（创建静态方法返回类对象）
3. 使用实例工厂创建（创建非静态方法返回类对象）
** 属性输入的三种方式 
1. set方法
2. 有参数构造方法
3. 使用接口注入
** IOC和DI
IOC：控制反转，把对象创建交给spring配置
DI：依赖注入，向类里面属性设置值
关系：DI不能单调操作，必须在IOC基础上完成操作
** spring整合web项目原理 
1. 加载spring核心配置文件（要new对象，功能可以实现，但效率低）
2. 优化思路：把加载配置文件和创建对象过程，放在服务器启动时候完成
3. 实现原理：ServletContext对象，监听器。在服务器启动时，为每个项目创建一个
   ServletContext对象，使用监听器可以监听对象创建时间，然后就加载spring配置文件，创
   建配置文件配置对象。把创建的对象放到ServletContext域对象里（setAttribute方法），
   获取对象时候，到ServletContext域中获取（getAtrribute方法）
** AOP 
面向切面编程，实现拓展功能不修改源代码。采用 *横向抽取机制* ，取代传统纵向继承体系重复性代码。
*** 操作术语
- *连接点* 类里面可以被增强的方法
- *切入点* 类里面实际被增强的方法
- *通知/增强* 增强的逻辑或功能
- *切面* 把增强应用到具体方法的过程
