#+TITLE: java补充笔记
#+DATE: 2017-07-11
#+SETUPFILE: ~/blog/setupfile.org
#+JEKYLL_LAYOUT: post
#+JEKYLL_CATEGORIES: notes
#+JEKYLL_TAGS: java
#+JEKYLL_PUBLISHED: true

* 代码编写规范
1. *类名* 每个单词的首字母都大写
2. *变量名* 第一个单词首字母小写，之后每个单词首字母大写
3. *方法名* (同变量名)
4. *常量名* 每个字母都大写
5. *包名* 每个字母都小写
-----
* 内存空间
** 栈内存
保存所有对象的名称，堆内存的 *空间地址*
** 堆内存
保存对象的具体属性内容
** 全局数据区
保存 *static* 类型的属性和内容
** 全局代码区
保存所有方法的 *定义*
-----
* /final/ 关键字
- *final类* 不能被继承
- *final方法* 不能被子类覆写
- *final变量* 为常量，赋值后不能被修改
-----
* 其他
1. *static* 类型的变量，方法和代码块在运行时最优先加载（ *static* 定义的属性被称为公共属性）
2. *throw* 是程序员手动抛出异常； *throws* 是 *JVM* 从异常发生处向上层抛出给调用处
3. *object* 类是java中所有类的父类，其中 *equals* 方法比较的是引用地址
4. *this()* 构造方法必须放在首行，多个构造方法相互调用必须留一个出口。（ *super()* 方法也必须放在函数体首行，且不能和 *this()* 同时出现
5. 方法的多态体现在 *重载和覆写* ，对象的多态体现在子类和父类对象的相互转化：子类对象给父类引用为 *向上转型* ，反之父类对象给子类引用则为 *向下转型*
6. 接口（类）中的变量默认为 *全局变量* ，方法均为 *抽象方法*
7. 抽象类可以 *implement* 接口，反之接口不能继承抽象类。（抽象类中可能含非抽象方法）
